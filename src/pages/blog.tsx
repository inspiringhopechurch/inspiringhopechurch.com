import React from "react";
import { graphql, type PageProps } from "gatsby";
import { getImage } from "gatsby-plugin-image";
import config from "../../config";
import { BlogItem, FancyHeading, SEO } from "../components";
import "./blog.sass";

const Blog = ({ data }: PageProps<Queries.BlogPostQuery>) => {
  const { edges } = data.allGhostPost;

  return (
    <>
      <section className={`fade-in hero is-halfheight`}>.
        <div className={`hero-body`}>
          <div className={`container has-text-centered`}>
            <FancyHeading heading="Inspiring Moments" />
          </div>
        </div>
      </section>
      <section className={`box is-shadowless blog-content container`}>
        <div className={`columns is-multiline is-centered`}>
          {/** Autogenerated featureImageSharp defined childImageSharp as potentially null.
            Type should be undefined, but we ignore and assume they're interchangeable. */}
          {edges.map(({ node }, index) => (
            <BlogItem
              isFirstItem={index === 0}
              blogTitle={node.title!}
              // blogImage={node.feature_image}
              // @ts-expect-error
              blogImageObj={getImage(node.featureImageSharp)}
              blogDate={node.published_at_pretty ?? undefined}
              blogExcerpt={node.excerpt ?? ''}
              blogLink={`${config.postPrefix}/${node.slug}`}
              blogAuthor={node.primary_author?.name}
              blogReadingTime={node.reading_time ?? undefined}
              onBlogIndex={true}
              key={node.id}
            />
          ))}
        </div>
      </section>
    </>
  );
};

export const query = graphql`
  query BlogPost {
    allGhostPost(sort: { published_at: DESC }) {
      edges {
        node {
          ...GhostPostFields
        }
      }
    }
  }
`;

// Default export is rendered when user visits page.
export default Blog;

export const Head = () => <SEO title="Inspiring Moments" />
