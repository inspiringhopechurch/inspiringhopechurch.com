name: Biuld, Test and Deploy
on:
  push:
    branches:
      - main
      - develop

env:
  # Ghost API urls
  GHOST_API_URL: ${{ secrets.GHOST_API_URL }}
  GHOST_CONTENT_API_KEY: ${{ secrets.GHOST_CONTENT_API_KEY }}
jobs:
  build_site:
    name: Build Site
    runs-on: ubuntu-22.04
    container:
      image: mastrbennett/cypress-base
    env:
      NODE_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install, Build üèó and Test site üß™
        env:
          NODE_ENV: test
          # pass the Dashboard record key and project ID as an environment variables
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm ci --legacy-peer-deps
          npm run build
          npm run serve &
          sleep 5 && npm run integration -- --browser electron --record
      - name: Deploy Dev Site
        if: success() && github.ref == 'refs/heads/develop'
        uses: https://github.com/appleboy/scp-action@v0.1.2
        with:
          host: inspiringhopechurch.com
          port: 22
          username: ${{secrets.DEPLOY_USER}}
          key: ${{secrets.DEPLOY_KEY}}
          target: /var/www/inspiringhope.gatsby/public
          rm: true
          source: "public/*"
          strip_components: 1
      - name: Deploy Prod Site
        if: success() && startsWith(github.ref, 'refs/tags/v')
        uses: https://github.com/appleboy/scp-action@v0.1.2
        with:
          host: inspiringhopechurch.com
          port: 22
          username: ${{secrets.DEPLOY_USER}}
          key: ${{secrets.DEPLOY_KEY}}
          target: /var/www/inspiringhopechurch.com/public
          rm: true
          source: "public/*"
          strip_components: 1
